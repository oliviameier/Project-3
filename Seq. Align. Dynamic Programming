/**
	 * @author Olivia Meier
	 * @date April 18, 2023
	 */

//GAP PENALTY = 2
//MISMATCH = 1

public class SequenceAlignDynamicProg {
		
		static char[] x = {'A', 'A', 'C', 'A', 'G', 'T', 'T', 'A', 'C', 'C'};		//'A', 'A', 'C', 'A', 'G', 'T', 'T', 'A', 'C', 'C'
		static char[] y = {'T', 'A', 'A', 'G', 'G', 'T', 'C', 'A'};			//'T', 'A', 'A', 'G', 'G', 'T', 'C', 'A'
		static int m = x.length;
		static int n = y.length;
		static int count = 0;
		static int[][] align = new int[m + 1][n + 1];
		
		
		public static void main (String[] args) { 
			//timing code
			long begin = System.nanoTime(); 				//start timer
			
			alignment();
			
			long end = System.nanoTime();					//end timer
			long time = end - begin;					//calculate total time
			System.out.println("The algorithm took " + time + " ns");	//print time 
			
		}
		
		//find and print optimal alignment cost matrix
		public static void alignment(){
			int penalty = 0;
	        
	       //initialize the first row and column of the array
	        for (int i = 0; i <= m; i++) {
	           align[i][0] = i * 2;
	           count = count + 1;
	        }
	        for (int j = 0; j <= n; j++) {
	           align[0][j] = j * 2;
	        }
	        
	        //fill in the rest of the array using dynamic programming
	        for (int i = 1; i <= m; i++) {
	            for (int j = 1; j <= n; j++) {
	                if (x[i - 1] == y[j - 1]) {					//changed from x.length == y.length
	                	penalty = 0;
	                	count = count + 1;
	                }
	                else {
	                	penalty = 1;
	                	count = count + 1;
	                }
	                count = count + 3;
	                align[i][j] = Math.min(align[i - 1][j - 1] + penalty, Math.min(align[i - 1][j] + 2, align[i][j - 1] + 2)); 
	            }
	        }
	        
	      //print optimal alignment array 
	        for(int i = x.length; i >= 0; i--) {
	        	for(int j = y.length; j >= 0; j--) {
	        		System.out.print(align[i][j] + " ");
	        	}
	        	System.out.println();
	        }
	        System.out.println("_________________________________________");
	        System.out.println("The cost of alignment is: " + align[m][n]);		//changed from [m-1][n-1] 
	}
}

